resources:
    ProjetNormandie\ForumBundle\Entity\Category:
        shortName: 'ForumCategory'
        itemOperations:
            get: ~
        collectionOperations:
            home:
                method: 'GET'
                normalization_context: {'groups': [forum.category.read, forum.forum.read, forum.lastMessage, message.last, user.read]}
                path: '/categorie/home'
                controller: 'ProjetNormandie\ForumBundle\Controller\CategoryController::home'
    ProjetNormandie\ForumBundle\Entity\Forum:
        shortName: 'ForumForum'
        collectionOperations:
            get: ~
        itemOperations:
            get:
                normalization_context: {'groups': [forum.forum.read]}
                access_control: 'object.getStatus() == "public" or is_granted(object.getRole())'
        properties:
            topics:
                subresource:
                    resourceClass: 'ProjetNormandie\ForumBundle\Entity\Topic'
                    maxDepth: 1
                    collection: false
    ProjetNormandie\ForumBundle\Entity\Topic:
        shortName: 'ForumTopic'
        subresourceOperations:
            api_forum_forums_topics_get_subresource:
                method: 'GET'
                normalization_context: {'groups': [forum.topic.read, forum.topic.lastMessage, message.last, user.read]}
        attributes:
            pagination_items_per_page: 20
#            order:
#                - 'lastMessage.id'
        collectionOperations:
            post:
                access_control: 'is_granted("ROLE_USER")'
                denormalization_context: {'groups': [forum.topic.post]}
                normalization_context: {'groups': [forum.topic.read]}
        itemOperations:
            get:
                normalization_context: {'groups': [forum.topic.read]}
            put:
                access_control: 'is_granted("ROLE_USER") and object.getUser() == user'
        properties:
            messages:
                subresource:
                    resourceClass: 'ProjetNormandie\ForumBundle\Entity\Message'
                    collection: true
    ProjetNormandie\ForumBundle\Entity\TopicType:
        shortName: 'ForumTopicType'
        itemOperations:
            get: ~
    ProjetNormandie\ForumBundle\Entity\TopicUser:
        shortName: 'ForumTopicTuser'
        collectionOperations:
            read:
                method: 'GET'
                access_control: 'is_granted("ROLE_USER")'
                path: '/topic_users/set-read'
                swagger_context:
                    description: 'Set read topic for current user'
                    parameters:
                        - name: idForum
                          in: query
                          required: false
                          type: integer
                controller: 'ProjetNormandie\ForumBundle\Controller\TopicUserController::setRead'
        itemOperations:
            get: ~
    ProjetNormandie\ForumBundle\Entity\Message:
        shortName: 'ForumMessage'
        attributes:
            pagination_items_per_page: 20
        subresourceOperations:
            api_forum_topics_messages_get_subresource:
                method: 'GET'
                normalization_context: {'groups': [forum.message.read, user.read]}
        collectionOperations:
            get:
                normalization_context: {'groups': [forum.message.read, user.read]}
            post:
                denormalization_context: {'groups': [forum.message.post]}
        itemOperations:
            get:
                method: 'GET'
                normalization_context: {'groups': [forum.message.read]}
            put:
                access_control: 'is_granted("ROLE_USER") and object.getUser() == user'
                denormalization_context: {'groups': [forum.message.put]}


